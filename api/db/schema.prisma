datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
  previewFeatures = ["fullTextSearch"]
  provider        = "prisma-client-js"
}

model ProgramOfStudy {
  id            Int          @id @default(autoincrement())
  name          String
  body          String
  image         String
  description   String
  active        Boolean      @default(false) //require admin approval
  programType   programType
  carrerType    carrerType
  createdAt     DateTime     @default(now())
  headQuarterId Int?         @unique
  headQuarter   HeadQuarter? @relation(fields: [headQuarterId], references: [id])
  acredition    Acredition[]
  users         User[]
}

model HeadQuarter {
  id              Int              @id @default(autoincrement())
  name            String
  description     String
  createdAt       DateTime         @default(now())
  programsOfStudy ProgramOfStudy[]
}

model Acredition {
  id          Int             @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime        @default(now())
  documents   Document[]
  programId   Int?            @unique
  program     ProgramOfStudy? @relation(fields: [programId], references: [id])
}

model Document {
  id           Int         @id @default(autoincrement())
  name         String
  description  String
  url          String
  createdAt    DateTime    @default(now())
  acreditionId Int?        @unique
  acredition   Acredition? @relation(fields: [acreditionId], references: [id])
}

model User {
  id                  Int              @id @default(autoincrement())
  name                String
  email               String           @unique
  role                roleType         @default(CLIENT)
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  programs            ProgramOfStudy[]
  createdAt           DateTime         @default(now())
  updatedAt           DateTime?        @updatedAt
}

enum roleType {
  ADMIN  @map("ADMIN")
  CLIENT @map("CLIENT")
}

enum programType {
  PREGRADO @map("PREGRADO")
  POSGRADO @map("POSGRADO")
}

enum carrerType {
  TECNICO                       @map("TECNICO")
  TECNOLOGO                     @map("TECNOLOGO")
  PROFESIONAL                   @map("PROFESIONAL")
  ESPECIALIZACION_TECNICA       @map("ESPECIALIZACION_TECNICA")
  ESPECIALIZACION_TECNOLOGICA   @map("ESPECIALIZACION_TECNOLOGICA")
  ESPECIALIZACION_UNIVERSITARIA @map("ESPECIALIZACION_UNIVERSITARIA")
  MAESTRIA                      @map("MAESTRIA")
  DOCTORADO                     @map("DOCTORADO")
}
